[{"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\index.js":"1","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\App.js":"2","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\PetForm.jsx":"4","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\EditPet.jsx":"5","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\OnePet.jsx":"6","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\AllPets.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":547,"mtime":1627058198486,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3063,"mtime":1627056039641,"results":"12","hashOfConfig":"9"},{"size":3632,"mtime":1627060593953,"results":"13","hashOfConfig":"9"},{"size":1589,"mtime":1627057742845,"results":"14","hashOfConfig":"9"},{"size":2160,"mtime":1627060201384,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g3v4hk",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\index.js",[],"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\App.js",[],"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\PetForm.jsx",[],"C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\EditPet.jsx",["33"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst EditPet = (props) => {\r\n    \r\n    const [petInfo, setPetInfo] = useState({\r\n        title:\"\",\r\n        type:\"\",\r\n        description: \"\",\r\n        skills1: \"\",\r\n        skills2: \"\",\r\n        skills3: \"\"\r\n    }) \r\n\r\n    const [errors, setErrors] = useState ({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n        .then(res => {\r\n            setPetInfo(res.data.pets)\r\n        })\r\n        .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }, [])\r\n\r\n    const changeHandler = (e) => {\r\n        setPetInfo({\r\n            ...petInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/pet/edit/${props._id}`, petInfo)\r\n            .then (res => {\r\n                console.log('************************', res)\r\n                if (res.data.error) {\r\n                    setErrors(res.data.error.errors)\r\n                } else {\r\n                    setPetInfo(res.data.pet)\r\n                    navigate('/')\r\n                }\r\n            })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }\r\n\r\n    return (\r\n        <div>   \r\n            <h2>Edit {petInfo.title}</h2>\r\n            <Link to = \"/\" className = \"card-link\">Home</Link>\r\n            <div className = \"container\">\r\n                <form onSubmit = {submitHandler}> \r\n                    <div className = \"form-group\">\r\n                        <label>Title:</label>\r\n                        <input onChange = {changeHandler} type = \"text\" name = \"title\" id = \"\" className = \"form-control\" value = {petInfo.title} />\r\n                        <p className = \"alert-danger\">{errors.title? errors.title.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Type:</label>\r\n                        <input onChange = {changeHandler} type = \"text\" name = \"type\" id = \"\" className = \"form-control\" value = {petInfo.type} />\r\n                        <p className = \"alert-danger\">{errors.type? errors.type.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description:</label>\r\n                        <textarea onChange = {changeHandler} name=\"description\" id=\"\" cols=\"20\" rows=\"5\" className =\"form-control\" value = {petInfo.description} />\r\n                        <p className = \"alert-danger\">{errors.description? errors.description.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                    <h4>Skills (optional):</h4>\r\n                    <label>Skill 1:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills1\" id = \"\" className = \"form-control\" value = {petInfo.skills1} />\r\n                    <label>Skill 2:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills2\" id = \"\" className = \"form-control\" value = {petInfo.skills2}/>\r\n                    <label>Skill 3:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills3\" id = \"\" className = \"form-control\" value = {petInfo.skills3} />\r\n                </div>\r\n                    <input type = \"submit\" value = \"Edit Pet\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPet;","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\OnePet.jsx",["34"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst OnePet = (props) => {\r\n    const [petInfo, setPetInfo] = useState ({})\r\n    const [error, setError] = useState ()\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    setError(res.data.error)\r\n                } else {\r\n                    setPetInfo(res.data.pets)\r\n                }\r\n\r\n            })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }, []);\r\n\r\n    const deletePet = (e) => {\r\n        axios.delete(`http://localhost:8000/api/pet/${props._id}`)\r\n        .then(res => {\r\n            navigate ('/')\r\n        })\r\n        .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!error?\r\n            <>\r\n                <h3>Pet Details {petInfo.title}</h3>\r\n                <Link to = \"/\" className = \"card-link\">Home</Link>\r\n                <button onClick = {deletePet} className = \"btn btn-warning\">Adopt {petInfo.title}</button>\r\n                <div>\r\n                    <p>Type: ${petInfo.type}</p>\r\n                    <p>Pet Description: {petInfo.description}</p>\r\n                    <p>Skills: {petInfo.skills1}, {petInfo.skills2}, {petInfo.skills3}</p>\r\n\r\n                </div>\r\n            </> : <h1>Nope not found</h1>\r\n            }\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default OnePet;","C:\\Users\\Kyle\\Desktop\\codingdojo\\MERN\\MongoDB\\Pet_Shelter\\client\\src\\components\\AllPets.jsx",["35","36"],"import Reach, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst AllPets = () => {\r\n    const [allPets, setAllPets] = useState([])\r\n\r\n    useEffect( () => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res => {\r\n                // console.log(\"*****************************\", res)\r\n                setAllPets(res.data.pets)\r\n        })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n        }, [])\r\n\r\n    allPets.sort((a, b) => {\r\n        var typeA = a.type.toUpperCase();\r\n        var typeB = b.type.toUpperCase();\r\n        if (typeA < typeB) {\r\n            return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <h2>These pets are looking for a good home</h2>\r\n            <Link to = {`/api/pet/new`} className = \"card-link\">add a pet to the shelter</Link>\r\n                    <div>\r\n                        <table className=\"table table-reflow\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { allPets.map( (p, i) => {\r\n                                    return (\r\n                                    <tr>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.type}</td>\r\n                                    <td><Link to = {`/api/pet/${p._id}`} className = \"card-link\">Details</Link> | <Link to = {`/api/pet/edit/${p._id}`} className = \"card-link\">Edit</Link></td>\r\n                                    </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPets;",{"ruleId":"37","severity":1,"message":"38","line":24,"column":8,"nodeType":"39","endLine":24,"endColumn":10,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":20,"column":8,"nodeType":"39","endLine":20,"endColumn":10,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":3,"column":16,"nodeType":"44","messageId":"45","endLine":3,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props._id'. Either include it or remove the dependency array.","ArrayExpression",["47"],["48"],"no-unused-vars","'Reach' is defined but never used.","Identifier","unusedVar","'navigate' is defined but never used.",{"desc":"49","fix":"50"},{"desc":"49","fix":"51"},"Update the dependencies array to be: [props._id]",{"range":"52","text":"53"},{"range":"54","text":"53"},[647,649],"[props._id]",[654,656]]