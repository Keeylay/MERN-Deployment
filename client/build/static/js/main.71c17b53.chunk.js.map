{"version":3,"sources":["components/AllPets.jsx","components/PetForm.jsx","components/OnePet.jsx","components/EditPet.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","allPets","setAllPets","useEffect","axios","get","then","res","data","pets","catch","err","console","log","sort","a","b","typeA","type","toUpperCase","typeB","to","className","map","p","i","title","_id","AddPet","description","skills1","skills2","skills3","formInfo","setFormInfo","formErrors","setFormErrors","changeHandler","e","target","name","value","onSubmit","preventDefault","post","error","errors","navigate","onChange","id","message","cols","rows","OnePet","props","petInfo","setPetInfo","setError","onClick","delete","EditPet","setErrors","put","pet","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71c17b53.chunk.js","sourcesContent":["import Reach, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst AllPets = () => {\r\n    const [allPets, setAllPets] = useState([])\r\n\r\n    useEffect( () => {\r\n        axios.get('http://localhost:8000/api/pet')\r\n            .then(res => {\r\n                // console.log(\"*****************************\", res)\r\n                setAllPets(res.data.pets)\r\n        })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n        }, [])\r\n\r\n    allPets.sort((a, b) => {\r\n        var typeA = a.type.toUpperCase();\r\n        var typeB = b.type.toUpperCase();\r\n        if (typeA < typeB) {\r\n            return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <h2>These pets are looking for a good home</h2>\r\n            <Link to = {`/api/pet/new`} className = \"card-link\">add a pet to the shelter</Link>\r\n                    <div>\r\n                        <table className=\"table table-reflow\">\r\n                            <thead>\r\n                                <tr>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { allPets.map( (p, i) => {\r\n                                    return (\r\n                                    <tr>\r\n                                    <td>{p.title}</td>\r\n                                    <td>{p.type}</td>\r\n                                    <td><Link to = {`/api/pet/${p._id}`} className = \"card-link\">Details</Link> | <Link to = {`/api/pet/edit/${p._id}`} className = \"card-link\">Edit</Link></td>\r\n                                    </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPets;","import { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst AddPet = () => {\r\n    const [formInfo, setFormInfo] = useState ({\r\n        title:\"\",\r\n        type:\"\",\r\n        description: \"\",\r\n        skills1: \"\",\r\n        skills2: \"\",\r\n        skills3: \"\"\r\n    })\r\n\r\n    const [formErrors, setFormErrors] = useState ({})\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/api/pet/new', formInfo)\r\n        .then ( res => {\r\n            // console.log(\"*****************************\", res)\r\n            if (res.data.error) {\r\n                setFormErrors(res.data.error.errors)\r\n                } else {\r\n                    navigate ('/')\r\n            }\r\n        })\r\n        .catch(err => console.log('Somethings wrong with Axios call', err)) \r\n    }\r\n\r\n    const changeHandler = (e) => {\r\n        setFormInfo({\r\n            ...formInfo, \r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <h3>Know a pet needing a good home?</h3>\r\n            <Link to = \"/\" className = \"card-link\">Home</Link>\r\n            <form onSubmit = {submitHandler}> \r\n                <div className = \"form-group\">\r\n                    <label>Name:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"title\" id = \"\" className = \"form-control\" />\r\n                    <p className = \"alert-danger\">{formErrors.title? formErrors.title.message:null}</p>\r\n                </div>\r\n                <div className = \"form-group\">\r\n                    <label>Type:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"type\" id = \"\" className = \"form-control\" />\r\n                    <p className = \"alert-danger\">{formErrors.type? formErrors.type.message:null}</p>\r\n                </div>\r\n                <div className = \"form-group\">\r\n                    <label>Description:</label>\r\n                    <textarea onChange = {changeHandler} name=\"description\" id=\"\" cols=\"20\" rows=\"5\" className =\"form-control\" />\r\n                    <p className = \"alert-danger\">{formErrors.description? formErrors.description.message:null}</p>\r\n                </div>\r\n                <div className = \"form-group\">\r\n                    <h4>Skills (optional):</h4>\r\n                    <label>Skill 1:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills1\" id = \"\" className = \"form-control\" />\r\n                    <label>Skill 2:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills2\" id = \"\" className = \"form-control\" />\r\n                    <label>Skill 3:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills3\" id = \"\" className = \"form-control\" />\r\n                </div>\r\n                <input type = \"submit\" value = \"Add Pet\" />\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddPet;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst OnePet = (props) => {\r\n    const [petInfo, setPetInfo] = useState ({})\r\n    const [error, setError] = useState ()\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    setError(res.data.error)\r\n                } else {\r\n                    setPetInfo(res.data.pets)\r\n                }\r\n\r\n            })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }, []);\r\n\r\n    const deletePet = (e) => {\r\n        axios.delete(`http://localhost:8000/api/pet/${props._id}`)\r\n        .then(res => {\r\n            navigate ('/')\r\n        })\r\n        .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!error?\r\n            <>\r\n                <h3>Pet Details {petInfo.title}</h3>\r\n                <Link to = \"/\" className = \"card-link\">Home</Link>\r\n                <button onClick = {deletePet} className = \"btn btn-warning\">Adopt {petInfo.title}</button>\r\n                <div>\r\n                    <p>Type: ${petInfo.type}</p>\r\n                    <p>Pet Description: {petInfo.description}</p>\r\n                    <p>Skills: {petInfo.skills1}, {petInfo.skills2}, {petInfo.skills3}</p>\r\n\r\n                </div>\r\n            </> : <h1>Nope not found</h1>\r\n            }\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default OnePet;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\n\r\nconst EditPet = (props) => {\r\n    \r\n    const [petInfo, setPetInfo] = useState({\r\n        title:\"\",\r\n        type:\"\",\r\n        description: \"\",\r\n        skills1: \"\",\r\n        skills2: \"\",\r\n        skills3: \"\"\r\n    }) \r\n\r\n    const [errors, setErrors] = useState ({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pet/${props._id}`)\r\n        .then(res => {\r\n            setPetInfo(res.data.pets)\r\n        })\r\n        .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }, [])\r\n\r\n    const changeHandler = (e) => {\r\n        setPetInfo({\r\n            ...petInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/pet/edit/${props._id}`, petInfo)\r\n            .then (res => {\r\n                console.log('************************', res)\r\n                if (res.data.error) {\r\n                    setErrors(res.data.error.errors)\r\n                } else {\r\n                    setPetInfo(res.data.pet)\r\n                    navigate('/')\r\n                }\r\n            })\r\n            .catch(err => console.log('Somethings wrong with Axios call', err))\r\n    }\r\n\r\n    return (\r\n        <div>   \r\n            <h2>Edit {petInfo.title}</h2>\r\n            <Link to = \"/\" className = \"card-link\">Home</Link>\r\n            <div className = \"container\">\r\n                <form onSubmit = {submitHandler}> \r\n                    <div className = \"form-group\">\r\n                        <label>Title:</label>\r\n                        <input onChange = {changeHandler} type = \"text\" name = \"title\" id = \"\" className = \"form-control\" value = {petInfo.title} />\r\n                        <p className = \"alert-danger\">{errors.title? errors.title.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Type:</label>\r\n                        <input onChange = {changeHandler} type = \"text\" name = \"type\" id = \"\" className = \"form-control\" value = {petInfo.type} />\r\n                        <p className = \"alert-danger\">{errors.type? errors.type.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description:</label>\r\n                        <textarea onChange = {changeHandler} name=\"description\" id=\"\" cols=\"20\" rows=\"5\" className =\"form-control\" value = {petInfo.description} />\r\n                        <p className = \"alert-danger\">{errors.description? errors.description.message:null}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                    <h4>Skills (optional):</h4>\r\n                    <label>Skill 1:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills1\" id = \"\" className = \"form-control\" value = {petInfo.skills1} />\r\n                    <label>Skill 2:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills2\" id = \"\" className = \"form-control\" value = {petInfo.skills2}/>\r\n                    <label>Skill 3:</label>\r\n                    <input onChange = {changeHandler} type = \"text\" name = \"skills3\" id = \"\" className = \"form-control\" value = {petInfo.skills3} />\r\n                </div>\r\n                    <input type = \"submit\" value = \"Edit Pet\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPet;","import { Router } from '@reach/router';\nimport './App.css';\nimport AllPets from './components/AllPets';\nimport AddPet from './components/PetForm';\nimport OnePet from './components/OnePet';\nimport EditPet from './components/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <AllPets path = \"/\" />\n        <AddPet path = \"/api/pet/new\" />\n        <OnePet path = '/api/pet/:_id' />\n        <EditPet path = '/api/pet/edit/:_id' />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}